{"ast":null,"code":"var _jsxFileName = \"D:\\\\dexlx-project\\\\frontend\\\\src\\\\ProductList.js\",\n  _s = $RefreshSig$();\n// ProductList.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductList = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/products');\n        setProducts(response.data);\n        console.log(products.image_url);\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    };\n    fetchProducts();\n  }, []);\n\n  // const handleSearchChange = (e) => {\n  //     setSearchQuery(e.target.value);\n  //   };\n\n  //   // Filter and sort products based on the search query\n  // const filteredProducts = products\n  // .filter((product) =>\n  //     product.name.toLowerCase().includes(searchQuery.toLowerCase())\n  // )\n  // .sort((a, b) => {\n  //     // Example sorting: prioritize products with names starting with the search query\n  //     const aStartsWith = a.name.toLowerCase().startsWith(searchQuery.toLowerCase());\n  //     const bStartsWith = b.name.toLowerCase().startsWith(searchQuery.toLowerCase());\n\n  //     if (aStartsWith && !bStartsWith) return -1; // `a` comes first\n  //     if (!aStartsWith && bStartsWith) return 1;  // `b` comes first\n\n  //     // If both or neither start with the query, sort alphabetically\n  //     return a.name.localeCompare(b.name);\n  // });\n\n  const handleViewProduct = productId => {\n    console.log(`Navigate to product ${productId}`);\n    // Example: Use React Router to navigate\n    // navigate(`/product/${productId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-list mainuser\",\n    children: products.map((product, index) => /*#__PURE__*/_jsxDEV(Card, {\n      product: product,\n      onViewProduct: handleViewProduct\n    }, product.id || index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 1\n  }, this);\n};\n_s(ProductList, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useEffect","useState","axios","Card","jsxDEV","_jsxDEV","ProductList","_s","products","setProducts","fetchProducts","response","get","data","console","log","image_url","error","handleViewProduct","productId","className","children","map","product","index","onViewProduct","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/dexlx-project/frontend/src/ProductList.js"],"sourcesContent":["// ProductList.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Card from './Card';\r\n\r\nconst ProductList = () => {\r\n\r\nconst [products, setProducts] = useState([]);\r\n\r\nuseEffect(() => {\r\n    \r\nconst fetchProducts = async () => {\r\n\r\n    try {\r\n    const response = await axios.get('http://localhost:5000/api/products');\r\n\r\n    setProducts(response.data);\r\n    \r\n    console.log(products.image_url)\r\n\r\n    } catch (error) {\r\n    console.error('Error fetching products:', error);\r\n    }\r\n};\r\n\r\nfetchProducts();\r\n}, []);\r\n\r\n\r\n// const handleSearchChange = (e) => {\r\n//     setSearchQuery(e.target.value);\r\n//   };\r\n\r\n//   // Filter and sort products based on the search query\r\n// const filteredProducts = products\r\n// .filter((product) =>\r\n//     product.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n// )\r\n// .sort((a, b) => {\r\n//     // Example sorting: prioritize products with names starting with the search query\r\n//     const aStartsWith = a.name.toLowerCase().startsWith(searchQuery.toLowerCase());\r\n//     const bStartsWith = b.name.toLowerCase().startsWith(searchQuery.toLowerCase());\r\n\r\n//     if (aStartsWith && !bStartsWith) return -1; // `a` comes first\r\n//     if (!aStartsWith && bStartsWith) return 1;  // `b` comes first\r\n\r\n//     // If both or neither start with the query, sort alphabetically\r\n//     return a.name.localeCompare(b.name);\r\n// });\r\n\r\n\r\n\r\n\r\nconst handleViewProduct = (productId) => {\r\nconsole.log(`Navigate to product ${productId}`);\r\n// Example: Use React Router to navigate\r\n// navigate(`/product/${productId}`);\r\n};\r\n\r\n\r\nreturn (\r\n<div className=\"product-list mainuser\">\r\n    {products.map((product, index) => (\r\n    <Card\r\n        key={product.id || index}\r\n        product={product}\r\n        \r\n        onViewProduct={handleViewProduct}\r\n    />\r\n    ))}\r\n</div>\r\n);\r\n\r\n\r\n};\r\n\r\nexport default ProductList;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IAEhB,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;MAE9B,IAAI;QACJ,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,oCAAoC,CAAC;QAEtEH,WAAW,CAACE,QAAQ,CAACE,IAAI,CAAC;QAE1BC,OAAO,CAACC,GAAG,CAACP,QAAQ,CAACQ,SAAS,CAAC;MAE/B,CAAC,CAAC,OAAOC,KAAK,EAAE;QAChBH,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD;IACJ,CAAC;IAEDP,aAAa,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAGN;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;;EAKA,MAAMQ,iBAAiB,GAAIC,SAAS,IAAK;IACzCL,OAAO,CAACC,GAAG,CAAC,uBAAuBI,SAAS,EAAE,CAAC;IAC/C;IACA;EACA,CAAC;EAGD,oBACAd,OAAA;IAAKe,SAAS,EAAC,uBAAuB;IAAAC,QAAA,EACjCb,QAAQ,CAACc,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC7BnB,OAAA,CAACF,IAAI;MAEDoB,OAAO,EAAEA,OAAQ;MAEjBE,aAAa,EAAEP;IAAkB,GAH5BK,OAAO,CAACG,EAAE,IAAIF,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAI3B,CACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAIN,CAAC;AAACvB,EAAA,CArEID,WAAW;AAAAyB,EAAA,GAAXzB,WAAW;AAuEjB,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}